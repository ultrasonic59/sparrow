#include <linux/fs.h>
#include <linux/init.h>
#include <linux/module.h>
////#include <asm/uaccess.h>
#include <linux/uaccess.h>

#include "../common_inc/sepia_types.h"
#include "../common_inc/sepia_utrk.h"
#include "../common_inc/sepia_params.h"
#include "../common_inc/sepia_trk_ioctl.h"
#include "sparrow_drv.h"


///+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ssize_t sepia_trk_read( struct file * file, char * buf,
                           size_t count, loff_t *ppos )
{
	int len=0;
#if 0
///static int	prev_len=65000;
loff_t t_lseek=	*ppos;
////printk( KERN_INFO "\n == write : [%d][%lx][%lx]\n", count,(long)t_lseek ,(long)curr_lseek);
if(t_lseek==OFFS_PARAM)
	{
	if( copy_to_user(buf, &mod_curr_par_dev, sizeof(par_device_t)))
	   return -EINVAL;
	return sizeof(par_trk_t);
	}
#if 0
else if(t_lseek==OFFS_ED_PARAM)
	{
	if( copy_to_user( buf, &ed_par_trk, sizeof(ed_par_trk_t) ))
	   return -EINVAL;
	return sizeof(ed_par_trk_t);
	}
#endif
else if(t_lseek==OFFS_OSC0)
		{
	if( copy_to_user( buf, mod_buffOscs, sizeof(u8)*MAX_OSC_LEN ))
		{
		printk( KERN_ERR " [mod]ERR read osc ");
		return -EINVAL;
		}
	g_req_osc=1;
	return sizeof(u8)*MAX_OSC_LEN;
		}
else if(t_lseek==OFFS_AMPS)
		{
		g_req_chng_bank=1;		///req chang bank
		while(g_req_chng_bank) ///wait change bank  ?????
			{
////			io_bit_count++;
////			put_led(io_bit_count)
				;
			};
		len=MOD_LEN_CHANS_DAT;
#if 0
		if(prev_len!=len)
		{
////		printk( KERN_INFO "\n == [m]mod_tst_set_req_rez_buf : [%d][%d]", len,MOD_CUR_NUM_IZM);
////		mod_dump_summ_rez();
		prev_len=len;
		}
#endif
////		printk( KERN_INFO "\n == [mod]len_rez_dat : [%d]\n", MOD_LEN_CHANS_DAT);

		if(MOD_LEN_CHANS_DAT<=0)
			return -EINVAL;
		if( copy_to_user( buf, mod_dat_rez[(g_wr_num_bank+1)&0x1].a_chan,MOD_LEN_CHANS_DAT ))
			return -EINVAL;
		return MOD_LEN_CHANS_DAT;
		}
#if 0
else
	{
	sprintf(t_str, "%s:%d",hello_str,io_bit_count);
	len = strlen( t_str );
	printk( KERN_INFO "=== read : %d\n", count );
	if( count < len )
		return -EINVAL;
   if( copy_to_user( buf, t_str, len ) )
	   return -EINVAL;
   printk( KERN_INFO "=== read return : %d:%d\n", len,io_bit_count );
   return len;
	}
#endif

#endif
return len;
}
